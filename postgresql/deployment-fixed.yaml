apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: sql
  labels:
    app: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      securityContext:
        fsGroup: 999
      containers:
        - name: postgresql
          image: postgres:13
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: POSTGRES_USER
            - name: PGDATA
              value: /var/lib/postgresql
          ports:
            - containerPort: 5432
              name: postgresql
          volumeMounts:
            - name: postgredb
              mountPath: /var/lib/postgresql
          securityContext:
            runAsUser: 999
            runAsGroup: 999
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -U "$POSTGRES_USER"
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -U "$POSTGRES_USER"
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgredb-pvc
      restartPolicy: Always

