pipeline {
    agent {
        kubernetes {
            // This must match your cloud name in Jenkins → Manage Jenkins → Cloud
            label 'mynode'
            defaultContainer 'jnlp'
        }
    }
    tools {
        nodejs 'nodejs'
    }
    environment {
        DOCKER_HUB_REPO = 'daggu1997/gitops'
        DOCKER_HUB_CREDENTIALS_ID = 'docker'
    }
    stages {
        stage('Checkout Github') {
            steps {
                git credentialsId: 'github', url: 'https://github.com/Chowdary1997/jenkins-ArgoCD-minikube'
            }
        }
        stage('Install node dependencies') {
            steps {
                sh 'npm install'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    echo 'building docker image...'
                    dockerImage = docker.build("${DOCKER_HUB_REPO}:latest")
                }
            }
        }
        stage('Trivy Scan') {
            steps {
                //sh 'trivy --severity HIGH,CRITICAL --no-progress image --format table -o trivy-scan-report.txt ${DOCKER_HUB_REPO}:latest'
                //sh 'trivy --severity HIGH,CRITICAL --skip-update --no-progress image --format table -o trivy-scan-report.txt ${DOCKER_HUB_REPO}:latest'
                echo 'skip trivy'
            }
        }
        stage('Push Image to DockerHub') {
            steps {
                script {
                    echo 'pushing docker image to DockerHub...'
                    docker.withRegistry('https://registry.hub.docker.com', "${DOCKER_HUB_CREDENTIALS_ID}") {
                        dockerImage.push('latest')
                    }
                }
            }
        }
        stage('Install Kubectl & ArgoCD CLI') {
            steps {
                sh '''
                echo 'installing Kubectl & ArgoCD cli...'
                curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
                chmod +x kubectl
                mv kubectl /usr/local/bin/kubectl
                curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
                chmod +x /usr/local/bin/argocd
                kubectl --version
                '''
            }
        }
    }
    post {
        success {
            echo 'Build & Deploy completed succesfully!'
        }
        failure {
            echo 'Build & Deploy failed. Check logs.'
        }
    }
}
